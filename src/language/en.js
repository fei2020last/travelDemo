module.exports = {
  language: {
    name: 'ENGLISH'
  },
  error: {
    'checkTime': 'Please Check Time'
  },
  common: {
    save: 'Save',
    provide: 'Provide',
    ge: '',
    inAddition: 'In Addition',
    xiang: '',
    zai: '',
    zhong: ' ',
    viewAll: 'View All',
    viewService: 'View Service',
    viewApplication: 'View Service',
    noAvailableData: 'No Available Data',
    analyzeEndpoint: 'Analyze Endpoint',
    analyzeMessage: 'Analyze Message',
    analyzeService: 'Analyze Service',
    type: '类型',
    technology: '技术',
    serviceMark: 'Business Name',
    endpointMark: 'Interface Name',
    noConnection: 'There is not relate '
  },
  column: {
    name: 'Name',
    callsAgg: 'Calls',
    erroneousCallsAgg: 'Erroneous Calls',
    erroneousCallRate: 'Erroneous Call Rate',
    erroneousCalls: 'Erroneous Calls',
    latency: 'Latency',
    health: 'Health',
    errorMessage: 'Error Message',
    erroneousCallCount: 'Erroneous Call Count',
    logMessage: 'Log Message',
    logLevel: 'Log Level',
    count: 'Count',
    errors: 'Errors',
    errorsAgg: 'Errors Agg',
    serviceMark: 'Service Name',
    endpointMark: 'Enpoint Name'
  },
  navbar: {
    day: 'Day',
    hour: 'Hour',
    hours: 'Hours',
    minute: 'Minus',
    minutes: 'Minus',
    second: 'Second',
    near1Min: 'Last minute',
    near5Min: 'Last 5 minutes',
    near10Min: 'Last 10 minutes',
    near30Min: 'Last 30 minutes',
    near1Hour: 'Last hour',
    near6Hour: 'Last 6 hours',
    near12Hour: 'Last 12 hours',
    near24Hour: 'Last 24 hours',
    yesterday: 'Yesterday',
    twoDayAgo: 'Two Day Ago',
    sevenDayAgo: 'Last seven days',
    lastWeek: 'Previous week',
    month: 'Month',
    timeRange: 'Time Range',
    preSet: 'Pre-Set',
    setTime: 'Set Time',
    live: 'Live'
  },
  sidebar: {
    home: 'Home',
    websiteMonitoring: 'WebsiteMonitoring',
    webappsDetail: 'WebsiteMonitoring Detail',
    websiteDetail: 'WebsiteMonitoring Detail',
    addWebsite: 'WebsiteMonitoring',
    application: 'Application',
    applicationDetail: 'Application Detail',
    serviceDetail: 'Services Detail',
    platform: 'Platform',
    cloud: 'Cloud Foundry',
    kubernetes: 'Kubernetes',
    kubernetesDetail: 'Kubernetes Detail',
    infrastructure: 'Infrastructure',
    infrastructureDetail: 'Infrastructure Detail',
    pluginDetail: 'Infrastructure Detail',
    physicalMap: 'Map',
    hostTopology: 'host topology',
    ServiceTopology: 'service topology',
    tableList: 'TableList',
    analysis: 'Analysis',
    analyze: 'Analyze',
    analysisDetail: 'Analysis Detail',
    analyzeDetail: 'Analyze Detail',
    event: 'Event',
    events: 'Event',
    eventDetail: 'Event Detail',
    serviceSchedule: 'Business Scene Monitoring',
    serviceScheduleDetail: 'Business Scene Monitoring Detail',
    autoInspection: 'Auto Inspection',
    settings: 'Settings',
    more: 'More',
    agent: 'Agent',
    cmdb: 'IT基础资源管理',
    agentDetail: 'Agent Detail',
    document: 'Document',
    support: 'Support',
    about: 'About',
    logout: 'Logout',
    bus: 'Business Show',
    business: 'System',
    businessShow: 'Model'
  },
  home: {
    error: 'error',
    service: 'services',
    ms: 'ms',
    allApplication: 'All Application',
    kubernetes: 'Kubernetes',
    nodes: 'Nodes',
    node: 'Node',
    pods: 'Pods',
    pod: 'Pod',
    namespaces: 'Namespaces',
    //
    allCluster: 'All Cluster',
    //
    host: 'Host',
    process: 'Process',
    docker: 'Docker',
    container: 'Container',
    cluster: 'Cluster',
    osName: 'Operator Name',
    cpu: 'CPU Count',
    cpuUsed: 'CPU Used',
    cpuAverage: 'CPU Average',
    average: 'average',
    started: 'Start Time',
    created: 'Create Time',
    all: 'All',
    //
    website: 'Website',
    addWebsite: 'Add Website',
    addApp: 'Add App',
    allWebApp: 'All Website And App',
    allWeb: 'All Website',
    incident: 'Incident',
    addUser: 'Add User',
    allEvent: 'All Event'
  },
  websiteMonitoring: {
    website: {
      tabName: 'website',
      webLabel: 'name',
      pageViewsAgg: 'pageViewsAgg',
      onLoadTimeAgg: 'onLoadTimeAgg',
      health: 'health'
    },
    mobileApp: {
      tabName: 'mobile app',
      appLabel: 'name',
      sessionsAgg: 'sessionsAgg',
      viewsAgg: 'viewsAgg'
    }
  },
  application: {
    applications: {
      tabName: 'Applications',
      label: 'name',
      boundaryScope: 'boundaryScope',
      services: 'services',
      call: 'call',
      calls: 'calls',
      latency: 'latency',
      errors: 'errors',
      health: 'health'
    },
    services: {
      tabName: 'Services',
      label: 'Name',
      types: 'Types',
      technologies: 'Technologies',
      applications: 'Applications',
      endpoints: 'Endpoints',
      calls: 'Calls',
      latency: 'Latency',
      errors: 'Errors',
      erroneousCallsAgg: 'Erroneous Calls'
    },
    applyDetail: {
      noIssues: 'No Issues',
      issues: 'Issues',
      stack: 'Stack',
      kubernetesCluster: 'Kubernetes Cluster',
      kubernetesNode: 'Kubernetes Node',
      kubernetesNamespace: 'Kubernetes Namespace',
      kubernetesDeployment: 'Kubernetes Deployment',
      kubernetesService: 'Kubernetes Service',
      kubernetesDaemonSet: 'Kubernetes Daemon Set',
      kubernetesPod: 'Kubernetes Pod',
      PART_OF: 'PART OF',
      RUNS: 'RUNS',
      RUNS_WITHIN: 'RUNS WITHIN',
      RUNS_ON: 'RUNS ON',
      SERVES: 'SERVES',
      SERVED_BY: 'SERVED BY',
      EXECUTED_BY: 'EXECUTED BY',
      cpuRequest: 'CPU Request',
      container: 'Container',
      netRequest: 'NET Request',
      restart: 'Restart',
      host: 'Host',
      docker: 'Docker',
      process: 'Process',
      jvmRuntimePlatform: 'Jvm',
      nodeJsRuntimePlatform: 'Node.js',
      phpRuntimePlatform: 'Php',
      dropwizardApplicationContainer: 'Dropwizard Application',
      hBase: 'HBase',
      httpd: 'Apache HTTPd',
      jenkins: 'Jenkins',
      mySqlDatabase: 'Mysql DB',
      openLDAP: 'openLDAP',
      oracleDB: 'OracleDB',
      postgreSqlDatabase: 'PostgreSQL DB',
      redis: 'Redis',
      springbootApplicationContainer: 'Spring Boot',
      tomcatApplicationContainer: 'Tomcat',
      cpuUsed: 'CPU Used',
      memoryUsed: 'Memory Used',
      cpuTotalUsage: 'CPU Total Usage',
      memoryUsage: 'Memory Usage',
      cpuUser: 'CPU Used（User）',
      memVirtual: 'Memory Virtual',
      threadsBlocked: 'Threads Blocked',
      gcPause: 'GC Pause',
      rss: 'Rss',
      masterClusterRequests: 'Master Cluster Requests',
      avgLoad: 'Avg Load',
      requests: 'Requests',
      kBytes: 'KB',
      statusQUERIES: 'Queries',
      statusTHREADS_CONNECTED: 'Threads Connected',
      opsCompleted: 'Ops Completed',
      connCurrent: 'Connected Current',
      statsDbTime: 'DbTime/s',
      statsCpuTimeDbTimeRatio: 'Db CPU Time/DBRatio',
      totalCommittedTransactions: 'Committed Transactions',
      totalActiveConnections: 'Active Connections',
      throughput: 'Throughput',
      hitRate: 'Hit Rate',
      noActive: 'No Active',
      metricsHttpsessionsActive: 'Http Session Active',
      metricsRequests: 'Requests',
      totalSessionCount: 'Total Session Count',
      upstream: 'Upstream',
      downstream: 'Downstream',
      directCall: 'direct call',
      callsAndErroneousCalls: 'Calls And ErroneousCalls',
      callsAndLatency: 'Calls And Latency',
      analyzeCalls: 'Analyze Calls',
      summary: 'Summary',
      dependencies: 'Dependencies',
      flow: 'Flow',
      endPoints: 'EndPoints',
      endpoint: 'Endpoint',
      service: 'Service',
      application: 'Application',
      errorMessage: 'Error Message',
      logMessage: 'Log Message',
      infrastructure: 'Infrastructure',
      configuration: 'Configuration',
      calls: 'Calls',
      errorsAgg: 'Errors',
      erroneousCallsRate: 'Erroneous Call Rate',
      erroneousCalls: 'Erroneous Calls',
      callPercent: 'of all calls',
      callCount: 'Call count',
      errorAverage: 'all calls for',
      analyze: 'View in Analyze',
      latencyAverage: 'Latency average',
      releases: 'Releases',
      alerts: 'Alerts',
      ninety: '90th for',
      http: 'HTTP status code',
      call: 'Call count',
      other: 'other',
      latency: 'Latency',
      overTime: 'Over Time',
      distribution: 'Distribution',
      average: 'Mean',
      max: 'Max',
      issuesAndChanges: 'Infrastructure Issues & Changes',
      infraIssues: 'Infra Issues',
      offline: 'Offline',
      online: 'Online',
      change: 'Changes',
      topServices: 'Top Services',
      viewAllServices: 'View All Services',
      topEndpoints: 'Top Endpoints',
      viewAllEndpoints: 'View All Endpoints',
      processTime: 'Processing Time',
      SELF: 'Self',
      BATCH: 'Batch',
      DATABASE: 'Database',
      HTTP: 'Http',
      MESSAGING: 'Messaging',
      RPC: 'RPC',
      EVENT: 'Event',
      INTERNAL: 'Internal',
      OPENTELEMETRY: 'OpenTelemetry',
      SDK: 'SDK',
      SHELL: 'SHELL',
      topStatements: 'Top Statements',
      notMonitored: 'Not Monitored',
      infraUnknown: 'Infrastructure is not monitored due to information outside the scope of the running agent',
      configTitle: 'Update Application Perspective',
      configSubTitle: 'Application perspectives provide a means to model environments, sets of services, tenants, or just about anything.',
      configTitle1: 'Define a name for your application perspective.',
      configTitle1_1: 'Application Perspective Name',
      configTitle1_2: 'Renaming an application is an eventually consistent action within the ' + process.env.VUE_APP_PROJECT_NAME + ' system. For this' +
        ' reason, a change to an application name may take up to a few minutes until it has populated throughout the whole system.',
      configTitle1_3: 'Application perspective names should have a well established definition within an ' +
        'organization. For example, to model an environment: "Production Blue", to model a set of services: ' +
        '"Payment", or to model a tenant: "ACME Customer".',
      configTitle2: 'Downstream services.',
      configTitle2_1: 'No downstream services',
      configTitle2_2: 'Immediate downstream database and messaging services',
      configTitle2_3: 'All downstream services',
      configTitle3: 'Application scope.',
      configTitle3_1: 'Inbound Calls',
      configTitle3_2: 'The dashboard is displaying information based only on the calls that are performed by ' +
        'the consumers of this application.',
      configTitle3_3: 'All Calls',
      configTitle3_4: 'The dashboard is displaying information based on all calls that are performed within ' +
        'this application, by both consumers as well as internally.',
      configTitle4: 'Remove Application Perspective',
      configTitle4_1: 'If you no longer wish to monitor the application perspective ',
      configTitle4_2: ', please use the button below to remove it. Removing an application perspective may take up to a few minutes.',
      configTitle4_3: 'I understand that this action cannot be undone.'
    }
  },
  infrastructure: {
    dataList: 'DataList',
    diagram: 'Diagram',
    host: {
      zone: 'Subsystem',
      ip: 'IP',
      name: 'Label',
      hostname: 'HostName',
      OS: 'OS',
      type: 'Type',
      cpuCount: 'CPU Count',
      cpuUsed: 'CPU Used',
      memory: 'Memory',
      memoryUsed: 'Memory Used',
      health: 'HEALTH'
    },
    docker: {
      host: 'Host',
      label: 'Label',
      created: 'Created',
      started: 'Started',
      cpuUsed: 'CPU Used',
      memoryUsed: 'Memory Used',
      rxBytes: 'RxBytes',
      txBytes: 'TxBytes',
      health: 'Health'
    },
    process: {
      host: 'Host',
      label: 'Label',
      cpuUser: 'CPU USER',
      cpuSys: 'CPU Sys',
      virtual: 'virtual mem',
      resident: 'resident mem',
      share: 'share mem',
      health: 'health'
    },
    detail: {
      noIssues: 'No Issues',
      stack: 'Stack',
      upDownstream: 'Upstream / Downstream',
      releases: 'Releases',
      agentManagement: 'Agent Management',
      openAgentManagement: 'Open Agent Management',
      left: {
        os: 'OS',
        cpu: 'CPU',
        maxOpenFiles: 'Max Open Files',
        hostname: 'Hostname',
        machine: 'Machine',
        bootID: 'Boot ID',
        systemID: 'System ID',
        // startedAt: 'Started At',
        executable: 'Executable',
        processID: 'Process ID',
        user: 'User',
        group: 'Group',
        Arguments: 'Arguments',
        environmentVariables: 'Environment Variables',
        image: 'Image',
        command: 'Image',
        createdAt: 'Created At',
        startedAt: 'Started At',
        id: 'Id',
        names: 'Names',
        networkMode: 'Network Mode',
        storageDriver: 'Storage Driver',
        dockerVersion: 'Docker Version',
        containerLabels: 'Container Labels'
      },
      host: {
        system: 'System',
        interfaces: 'Interfaces',
        cpuUsage: 'CPU Usage',
        memoryUsage: 'Memory Usage',
        cpuLoad: 'CPU Load',
        user: 'User',
        wait: 'Wait',
        nice: 'Nice',
        steal: 'Steal',
        contextSwitches: 'Context Switches',
        load: 'Load',
        individualCpuUsage: 'Individual CPU Usage',
        memory: 'Memory',
        used: 'Used',
        buffers: 'Buffers',
        cached: 'Cached',
        available: 'Available',
        swapTotal: 'Swap total',
        swapFree: 'Swap free',
        openFiles: 'Open Files',
        current: 'Current',
        filesystems: 'Filesystems',
        device: 'Device',
        mount: 'Mount',
        options: 'Options',
        type: 'Type',
        capacity: 'Capacity',
        leaked: 'Leaked',
        inodeUsage: 'Inode usage',
        search: 'Search',
        networkInterfaces: 'Network Interfaces',
        mac: 'Mac',
        ips: 'IPs',
        rXBytes: ' RX Bytes',
        rXErrors: 'RX Errors',
        tXBytes: 'TX Bytes',
        tXErrors: ' TX Errors',
        tcpActivity: 'TCP Activity',
        established: 'Established',
        open: 'Open/s',
        inSegments: 'In Segments/s',
        outSegments: 'Out Segments/s',
        establishedResets: 'Established Resets',
        outResets: 'Out Resets',
        fail: 'Fail',
        error: 'Error',
        retransmission: 'Retransmission',
        topList: 'Process Top List',
        pID: 'PID',
        pName: 'Process Name',
        cpuNormalized: 'CPU (normalized)'
      },
      proess: {
        process: 'Process'

      },
      docker: {
        dockerContainer: 'Docker Container',
        cpuTotal: 'CPU Total',
        // memoryUsage: 'Memory Usage',
        logs: 'Logs',
        total: 'Total',
        kernel: 'Kernel',
        user: 'User',
        totalNormalized: 'Total Normalized',
        kernelNormalized: 'Kernel Normalized',
        userNormalized: 'User Normalized',
        throttlingCount: 'Throttling count',
        throttlingTime: 'Throttling time',
        usage: 'Usage',
        rSS: 'RSS',
        cache: 'Cache',
        memoryUsage: 'Memory Usage',
        activeAnonymous: 'Active anonymous',
        activeCache: 'Active cache',
        inactiveAnonymous: 'Inactive anonymous',
        inactiveCache: 'Inactive cache',
        blockIO: 'Block IO',
        read: 'Read',
        write: 'Write'
      }
    }
  },
  analysis: {
    application: 'Application',
    calls: 'Calls',
    traces: 'Traces',
    logs: 'Logs',
    website: 'Websites',
    pageLoad: 'Page Load',
    pageChange: 'Page Transitions',
    resourceLoad: 'Resource',
    httpRequest: 'HTTP Requests',
    error: 'JS Errors',
    custom: 'Custom Events',
    mobile: 'Mobile App',
    sessionStart: 'Session Start',
    viewChange: 'View Transitions',
    appHttpRequest: 'HTTP Requests',
    mobileCustom: 'Custom Events',
    profiles: 'Profiles'

  },
  login: {
    signIn: 'SignIn',
    welcome: 'Sign in to CloudT（CloudTomography）',
    welcomeInstana: 'Sign in to CloudT（CloudTomography）',
    welcomePK: 'Sign in to CloudT（CloudTomography）',
    welcomeTelecom: 'Sign in to 西藏电信大数据与AI中心',
    email: 'E-mail',
    password: 'Password',
    lost: 'Lost your Password?',
    tip: 'Please include @ in your email',
    tip1: 'Please fill in this content',
    tip3: 'Please include \'@\' in the email address !',
    tip4: 'Please enter the content before \'@\', otherwise the current content is incomplete!',
    tip5: 'Please enter the content after \'@\', otherwise the current content is incomplete!',
    tip6: 'The password can not be less than 8 digits!'

  },
  event: {
    event: 'Event',
    all: 'All',
    incidents: 'Incidents',
    issue: 'Issue',
    critical: 'Critical',
    warning: 'Warning',
    change: 'Changes',
    offline: 'Offline',
    online: 'Online',
    monitoringIssues: 'Monitoring issues',
    openEvents: 'Open events',
    title: 'Title',
    ip: 'IP',
    on: 'On',
    started: 'Started',
    end: 'End',
    timeLine: 'Timeline',
    filters: 'Filters',
    loadMore: 'Load More'
  }
}
